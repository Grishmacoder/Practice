# Write a program that calculates and prints the value according to the given formula:
# Q= Square root of [(2*C*D)/H]
# Following are the fixed values of C and H:
# C is 50.
# H is 30.
# D is a variable whose values should be input to your program in a comma-separated sequence.

class calculation:
    def __init__(self):
        self.c, self.h = 50, 30

    def result(self,l):
        q=[]
        for i in l:
            res = ((2*self.c*int(i))/self.h)**0.5
            q.append(res)
        return [i for i in q]

c1=calculation()
l1=[x for x in input("Enter the numbers: ").split(",")]
print(c1.result(l1))


# Define a class named Shape and its subclass Square. The Square class has an init function which
# takes length as argument. Both classes have an area function which can print the area of the shape
# where Shape’s area is 0 by default.

class Shape:
    def area(self):
        area = self.length**2
        print("square area is: ",area)

class Square(Shape):
    def __init__(self,length):
        self.length = length
    def area(self):
        a = self.length**2
        return a

s = Square(5)
print(s.area())


# Create a class to find three elements that sum to zero from a set of n real numbers
# Input array: [-25,-10,-7,-3,2,4,8,10]
# Expected output: [[-10,2,8],[-7,-3,10]]
import array as arr
class SumRealNumber:
    def __init__(self,arr,n):
        self.arr = arr
        self.n = n
    def find_num(self):
        temp = 0
        for i in range(0,self.n-2):
            for j in range(i+1,self.n-1):
                for k in range(j+1, self.n):
                    if(arr[i] + arr[j] + arr[k] == 0):
                        print([arr[i],arr[j],arr[k]])
                        temp = 1
        if temp == 0:
            print("No match found")

arr = [-25,-10,-7,-3,2,4,8,10]
n = len(arr)
obj = SumRealNumber(arr,n)
obj.find_num()


# Create a Time class and initialize it with hours and minutes.
# Create a method addTime which should take two Time objects and add them.
# E.g.- (2 hour and 50 min)+(1 hr and 20 min) is (4 hr and 10 min)
# Create another method displayTime which should print the time.
# Also create a method displayMinute which should display the total minutes in the Time.
# E.g.- (1 hr 2 min) should display 62 minute.

class Time:
    def __init__(self):
        self.hours = 0
        self.minute = 0
    def addtime(self,t1,t2):
        hours = t1[0] + t2[0]
        minute = t1[1] + t2[1]
        final_hour = hours+(minute//60)
        final_minute = minute%60
        print("Addition of hour and minutes are: ",[final_hour,final_minute])

    def displayTime(self,t1):
        hours, minute = t1[0],t1[1]
        print(f"The time is {hours} hours and {minute} minutes")
    def displayMinute(self,t1):
        total_minutes = (t1[0]*60)+t1[1]
        print("The total minutes are: ",total_minutes)

t1 = [1,20]
t2 = [2,50]
c= Time()
c.addtime(t1,t2)
c.displayTime(t1)
c.displayMinute(t2)


# Write a Person class with an instance variable “age” and a constructor that takes an integer as a
# parameter. The constructor must assign the integer value to the age variable after confirming the
# argument passed is not negative; if a negative argument is passed then the constructor should set
# age to 0 and print “Age is not valid, setting age to 0”. In addition, you must write the following instance
# methods:
class Person:
    age = 0
    def __init__(self,a):
        if a < 0:
            print("Age not valid, setting age to 0")
            self.age = 0
        else:
            self.age = a
    def yearpasses(self,year):
        self.age += year
        print(f"After {year} years age is {self.age}")

    def amIold(self):
        if 0 <= (self.age) <= 13:
            print("You are young")
        elif 13 <= (self.age) <=19:
            print("You are a teenager")
        else:
            print("You are old")


age_list= [-2,4,10,16,18,64,38]
for i in age_list:
    a = Person(i)
    a.amIold()

a=Person(38)
a.yearpasses(4)





