# Write a program in Python to find out the character in a string which is uppercase using list
# comprehension.

a_string = input("Enter a string: ")
n_list =[x for x in a_string if x.isupper() == True]
print(n_list)


# Write a program to construct a dictionary from the two lists containing the names of students and
# their corresponding subjects. The dictionary should map the students with their respective subjects.
# Let’s see how to do this using for loops and dictionary comprehension.
# HINT - Use Zip function also
# Sample input: students = ['Smit', 'Jaya', 'Rayyan'] subjects = ['CSE', 'Networking', 'Operating System']
# Expected output: {‘Smit’ : ’CSE’ , ’Jaya’ : ’Networking’ , ’Rayyan’ : ’Operating System’

students = ['Smit', 'Jaya', 'Rayyan']
subjects = ['CSE', 'Networking', 'Operating System']
x= list(zip(students,subjects))
output = {i:j for i,j in x}
print(output)


3. Learn More about Yield, next and Generators

Yield keyword is used as the return keyword but in generator. It works same as return does in function.
next keyword is reffered for iterating values which will be yield by the generator.
Generator is advanced version of iteration in python.



# Write a program in Python using generators to reverse the string.
# Input String = “Consultadd Training”

def reverse_string():
    str = "Consultadd Training"
    yield str[::-1]

obj1 = reverse_string()
print(f"output: {next(obj1)}")



# Write an example on decorators.
def display_info(func):

    def inner():
        print("Executing first", func.__name__)
        func()
        print("Execution finished")
    return inner

@display_info
def greeting():
    print("Hello World!")

greeting()

